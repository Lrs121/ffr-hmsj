#  Copyright 2019 Nicole Borrelli
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  This file is generated by build_types.py from datatype.def.
#
#  DO NOT EDIT THIS FILE DIRECTLY. Update "datatype.def" and rerun "build_types.py"
#
#  Generated on 2019-03-31 15:56

from stream.input import Input
from stream.output import Output


class Npc(object):
    def __init__(self, stream: Input):
        self.indentifier = stream.get_u16()
        self.event = stream.get_u16()
        self.x_pos = stream.get_u16()
        self.y_pos = stream.get_u16()
        self.sprite_id = stream.get_u16()
        self.move_speed = stream.get_u16()
        self.facing = stream.get_u16()
        self.in_room = stream.get_u16()

    def write(self, stream: Output):
        stream.put_u16(self.indentifier)
        stream.put_u16(self.event)
        stream.put_u16(self.x_pos)
        stream.put_u16(self.y_pos)
        stream.put_u16(self.sprite_id)
        stream.put_u16(self.move_speed)
        stream.put_u16(self.facing)
        stream.put_u16(self.in_room)


class Chest(object):
    def __init__(self, stream: Input):
        self.indentifier = stream.get_u16()
        self.chest_id = stream.get_u16()
        self.x_pos = stream.get_u16()
        self.y_pos = stream.get_u16()

    def write(self, stream: Output):
        stream.put_u16(self.indentifier)
        stream.put_u16(self.chest_id)
        stream.put_u16(self.x_pos)
        stream.put_u16(self.y_pos)


class Tile(object):
    def __init__(self, stream: Input):
        self.indentifier = stream.get_u16()
        self.event = stream.get_u16()
        self.x_pos = stream.get_u16()
        self.y_pos = stream.get_u16()

    def write(self, stream: Output):
        stream.put_u16(self.indentifier)
        stream.put_u16(self.event)
        stream.put_u16(self.x_pos)
        stream.put_u16(self.y_pos)


class Shop(object):
    def __init__(self, stream: Input):
        self.indentifier = stream.get_u16()
        self.event = stream.get_u16()
        self.x_pos = stream.get_u16()
        self.y_pos = stream.get_u16()

    def write(self, stream: Output):
        stream.put_u16(self.indentifier)
        stream.put_u16(self.event)
        stream.put_u16(self.x_pos)
        stream.put_u16(self.y_pos)


class Sprite(object):
    def __init__(self, stream: Input):
        self.indentifier = stream.get_u16()
        self.event = stream.get_u16()
        self.x_pos = stream.get_u16()
        self.y_pos = stream.get_u16()

    def write(self, stream: Output):
        stream.put_u16(self.indentifier)
        stream.put_u16(self.event)
        stream.put_u16(self.x_pos)
        stream.put_u16(self.y_pos)


class MapHeader(object):
    def __init__(self, stream: Input):
        self.indentifier = stream.get_u16()
        self.low_x = stream.get_u16()
        self.low_y = stream.get_u16()
        self.high_x = stream.get_u16()
        self.high_y = stream.get_u16()

    def write(self, stream: Output):
        stream.put_u16(self.indentifier)
        stream.put_u16(self.low_x)
        stream.put_u16(self.low_y)
        stream.put_u16(self.high_x)
        stream.put_u16(self.high_y)


